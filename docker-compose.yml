services:
  # Servicio de base de datos MySQL
  db:
    image: mysql:8.0
    container_name: reservas_db
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: reservas_db
      MYSQL_USER: reservas_user
      MYSQL_PASSWORD: reservas_password
    ports:
      - "3306:3306"
    volumes:
      - /init.sql
    networks:
      - reservas_network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-uroot", "-ppassword"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Servicio de backend Flask
  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    container_name: reservas_backend      # ← aquí adentro, no fuera
    restart: always
    depends_on:
      db:
        condition: service_healthy
    environment:
      DB_USERNAME: reservas_user
      DB_PASSWORD: reservas_password
      DB_HOST: db
      DB_PORT: 3306
      DB_NAME: reservas_db
    ports:
      - "5000:5000"
    networks:
      - reservas_network


  # Servicio de frontend React
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    container_name: reservas_frontend
    restart: always
    depends_on:
      - backend
    ports:
      - "80:80"
    networks:
      - reservas_network

networks:
  reservas_network:
    driver: bridge

volumes:
  db_data:
